---
# file: roles/common/tasks/tools.yml
# Configure useful tools for developers.
#
# tags: packages net devel
#


#
# net tools
#

- name: install curl
  sudo: True
  yum: name=curl state=present
  when: ansible_pkg_mgr == "yum"
  tags: packages net

- name: install curl
  sudo: True
  apt: pkg=curl state=present
  when: ansible_pkg_mgr == "apt"
  tags: packages net


- name: install wget
  sudo: True
  yum: name=wget state=present
  when: ansible_pkg_mgr == "yum"
  tags: packages net

- name: install wget
  sudo: True
  apt: pkg=wget state=present
  when: ansible_pkg_mgr == "apt"
  tags: packages net



#
# glibc
#

- name: install glibc stuff
  sudo: True
  yum: name=glibc          state=present
  yum: name=glibc-common   state=present
  yum: name=glibc-devel    state=present
  yum: name=glibc-static   state=present
  yum: name=glibc-headers  state=present
  when: ansible_pkg_mgr == "yum"
  tags: packages devel

#TODO for apt?



#
# make
#

- name: install make
  sudo: True
  yum: name=make state=present
  when: ansible_pkg_mgr == "yum"
  tags: packages devel

- name: install make
  sudo: True
  apt: pkg=make state=present
  when: ansible_pkg_mgr == "apt"
  tags: packages devel



#
# ack: a better grep optimized for programmers
#
# Ubuntu: @see https://github.com/lenniboy/ack-debian-package
#

- name: install ack ("ack-grep" in Ubuntu)
  sudo: True
  apt_repository: repo='ppa:leonard-ehrenfried/ack2'
  when: ansible_os_family == "Ubuntu"
  tags: packages devel

- name: install ack ("ack-grep" in Ubuntu)
  sudo: True
  apt: pkg=ack-grep update_cache=yes state=present
  when: ansible_os_family == "Ubuntu"
  tags: packages devel





- name: download ack
  sudo: True
  action: command creates=/usr/local/bin/ack  curl -L -z /usr/local/bin/ack -o /usr/local/bin/ack  {{ack_file_url}}
  when: ansible_os_family == "CentOS"  or  ansible_os_family == "Debian"
  tags: packages devel

- name: install ack
  sudo: True
  command: /bin/chmod  0755  /usr/local/bin/ack
  when: ansible_os_family == "CentOS"  or  ansible_os_family == "Debian"
  tags: packages devel



#
#
#

- name: install unzip
  sudo: True
  apt: pkg=unzip state=present
  when: ansible_pkg_mgr == "apt"
  tags: packages devel


#
# pigz: Parallel Implementation of GZip
#

- name: install pigz
  sudo: True
  yum: name=pigz state=present
  when: ansible_pkg_mgr == "yum"
  tags: packages devel

- name: install pigz
  sudo: True
  apt: pkg=pigz state=present
  when: ansible_pkg_mgr == "apt"
  tags: packages devel


#
# Enca: file encoding detection & conversion utility
#

- name: install enca
  sudo: True
  yum: name=enca state=present
  when: ansible_pkg_mgr == "yum"
  tags: packages devel

- name: install enca
  sudo: True
  apt: pkg=enca state=present
  when: ansible_pkg_mgr == "apt"
  tags: packages devel


#
# git
#

- name: install git
  sudo: True
  yum: name=git state=present
  when: ansible_pkg_mgr == "yum"
  tags: packages devel

- name: install git
  sudo: True
  apt: pkg=git state=present
  when: ansible_pkg_mgr == "apt"
  tags: packages devel



- name: install gitflow
  sudo: True
  yum: name=gitflow state=present
  when: ansible_pkg_mgr == "yum"
  tags: packages devel

- name: install git-flow
  sudo: True
  apt: pkg=git-flow state=present
  when: ansible_pkg_mgr == "apt"
  tags: packages devel



- name: install git-svn
  sudo: True
  yum: name=git-svn state=present
  when: ansible_pkg_mgr == "yum"
  tags: packages devel

- name: install git-svn
  sudo: True
  apt: pkg=git-svn state=present
  when: ansible_pkg_mgr == "apt"
  tags: packages devel



#
# subversion
#

- name: install subversion
  sudo: True
  yum: name=subversion state=present
  when: ansible_pkg_mgr == "yum"
  tags: packages devel

- name: install subversion
  sudo: True
  apt: pkg=subversion state=present
  when: ansible_pkg_mgr == "apt"
  tags: packages devel


- name: be sure svnserve is disabled
  sudo: True
  service: name=svnserve state=stopped enabled=no
  ignore_errors: true
  tags: packages devel




#
# zsh
#

- name: install zsh
  sudo: True
  yum: name=zsh state=present
  when: ansible_pkg_mgr == "yum"
  tags: packages devel

- name: install zsh
  sudo: True
  apt: pkg=zsh state=present
  when: ansible_pkg_mgr == "apt"
  tags: packages devel



#
# authbind: bind sockets to privileged ports without root
#


- name: install authbind
  sudo: True
  apt: pkg=authbind state=present
  when: ansible_pkg_mgr == "apt"
  tags: packages devel



- name: check if authbind is present
  sudo: True
  yum: pkg=authbind state=present
  register: authbind_present
  ignore_errors: yes
  when: ansible_os_family == "CentOS"
  tags: packages

- name: fetch authbind .rpm file, if necessary
  action: get_url url={{authbind_file_url}}  dest=/tmp/{{authbind_file}}
  when: ansible_os_family == "CentOS"  and  authbind_present|failed
  tags: packages

- name: install authbind, if necessary
  sudo: True
  action: command creates=/tmp/authbind chdir=/tmp rpm --force -Uvh  /tmp/{{authbind_file}}
  when: ansible_os_family == "CentOS"  and  authbind_present|failed
  tags: packages
